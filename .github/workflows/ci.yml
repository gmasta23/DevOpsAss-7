name: CI/CD Pipeline

on:
  push:
    branches:
      - main
        
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest

      - name: Telegram Notification (Test Passed)
        if: success()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN}}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_BOT_ID }}" \
          -d text="✅ Tests Passed Successfully!"

      - name: Send Telegram Notification (Tests Failed)
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_BOT_ID }}" \
          -d text="❌ Tests Failed! Check GitHub Actions logs."

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

      - name: Telegram Notification (Deployment Successful)
        if: success()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN}}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_BOT_ID }}" \
          -d text="✅ Deployment Successful!"

      - name: Send Telegram Notification (Tests Failed)
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_BOT_ID }}" \
          -d text="❌ Deployment Failed! Check GitHub Actions logs."
